<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAWRXhpZgAATU0AKgAAAAgAAAAAAAD/2wBDAAgGBgcGBQgHBwcJ
        CQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJ
        CQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjL/wAARCACfAL0DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAA
        AgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRol
        JicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QA
        HwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
        BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RV
        VldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
        xcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3+iiigAoopM0AB6Um
        RVLUdTttMtjNctgdAo5LH2FcnP4zubgEW0EcCZxmQ72P4Dj+dbUqE6msUc9bFUqPxvU7k1m3es6fZuY5
        rqMS/wDPNfmf/vkc1w1xqdzd8XF1M6/3N5VfyGKijnSJdkaqi9wowCfeuqOAl9pnBPM0/gX3nWy+JSwx
        aWbsP787+WPyGT+gqnJqN/cDEt35YP8ADbpt/U5P8qwvtXNO+18VssJCOyOeWNlPdmrsgY5kVpT6zSM/
        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
</value>
  </data>
</root>